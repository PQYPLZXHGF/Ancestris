<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="genjfr.app.tools.optionswizard" default="netbeans" basedir=".">
    <description>Builds, tests, and runs the project genjfr.app.tools.optionswizard.</description>
    <import file="nbproject/build-impl.xml"/>
    <target name="-pre-jar-prep">
        <exec executable="svn" failonerror="false"
              outputproperty="buildversion" errorproperty="svnerror">
                  <arg value="info"/>
            <arg value="--xml"/>
        </exec>
        <xmlproperty>
            <propertyresource name="buildversion"/>
        </xmlproperty>
        <property name="buildnumber" value="${info.entry.commit(revision)}" />
        <parsemanifest manifest="${manifest.mf}" attribute="OpenIDE-Module-Specification-Version" property="spec.version"/>
        <copyfile dest="build/${manifest.mf}-temp" src="${manifest.mf}"/>
        <manifest file="build/${manifest.mf}-temp" mode="update">
          <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}.${buildnumber}"/>
        </manifest>
    </target>
    <target name="jar-prep" depends="-pre-jar-prep,projectized-common.jar-prep"></target>
        <target name="jar" depends="init,compile,jar-prep" unless="is.jar.uptodate">
        <!-- XXX it seems that using <manifest> forces the JAR to be recreated each time -->
        <!-- (presumably due to the variable OIDE-M-I-V) -->
        <!-- so might have to use e.g. <manifest> task (created in build/ somewhere)? -->
        <!-- Cf: http://issues.apache.org/bugzilla/show_bug.cgi?id=29085 -->
        <!-- This task adds some or all of: -Public-Packages, -Friends, Class-Path, -IDE-Dependencies, -Module-Dependencies, -Specification-Version, -Implementation-Version, -Build-Version, AutoUpdate-Show-In-Client -->
        <jarwithmoduleattributes jarfile="${cluster}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="build/${manifest.mf}-temp" stamp="${cluster}/.lastModified">
            <fileset dir="${build.classes.dir}"/>
        </jarwithmoduleattributes>
    </target>

</project>
