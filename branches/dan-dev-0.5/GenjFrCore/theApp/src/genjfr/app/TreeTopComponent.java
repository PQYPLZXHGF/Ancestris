/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package genjfr.app;

import genj.app.Workbench;
import genj.gedcom.Context;
import genj.gedcom.Gedcom;
import genj.tree.TreeView;
import genj.tree.TreeViewFactory;
import genj.view.ViewFactory;
//import org.openide.util.ImageUtilities;
import java.awt.Graphics;
import javax.swing.SwingUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.RetainLocation;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//genjfr.app//Tree//EN",
autostore = false)
@RetainLocation("genjfr-output")
@ServiceProvider(service = GenjViewInterface.class)
public final class TreeTopComponent extends GenjViewTopComponent {

    private static TreeTopComponent factory;
    private static ViewFactory viewfactory = new TreeViewFactory();
    private static final String PREFERRED_ID = "TreeTopComponent";

    /*
     * lors de l'initialisation de la vue la taille du panel n'est pas correcte (0,0)
     * donc le node n'est pas centre dans la vue. Ce flag permet de lancer un recentrage lorsque
     * la taille a ete positionnee correctement et donc de refaire un centrage correct
     * apres.
     */
    private boolean sizeIsCorrect = false;

    ViewFactory getViewFactory() {
        return viewfactory;
    }

    @Override
    String getDefaultFactoryMode() {
        return "genjfr-output";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized TreeTopComponent getFactory() {
        if (factory == null) {
            factory = new TreeTopComponent();
        }
        return factory;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        super.writeProperties(p);
    }

    @Override
    public void gedcomClosed(Workbench workbench, Gedcom gedcom) {
        // FIXME: peut etre faut il le placer ailleurs ou faire autrement...
        genj.util.Registry r = App.getRegistry(gedcom);
        r.put("tree.root", ((TreeView) getView()).getRoot().getId());
        r.persist();
        super.gedcomClosed(workbench, gedcom);
    }

    Object readProperties(java.util.Properties p) {
        readPropertiesImpl(p);
        return this;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (!sizeIsCorrect) {
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    String root = App.getRegistry(getContext().getGedcom()).get("tree.root", (String) null);
                    TreeView v = (TreeView) getView();
                    if (root == null) {
                        getView().setContext(getContext(), false);
                    } else {
                        v.setRoot(getContext().getGedcom().getEntity(root));
                        v.show(getContext().getGedcom().getEntity(root));
                    }
                }
            });
            sizeIsCorrect = true;
        }
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }
}
